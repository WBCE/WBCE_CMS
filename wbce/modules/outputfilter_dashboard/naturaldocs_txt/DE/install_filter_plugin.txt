Header: Plugin-Filter schreiben (de)

Topic: Einen Plugin-Filter erzeugen

Plugin-Filter sind, &auml;hnlich wie Module, ZIP-Archive aus den Dateien !plugin_info.php!,
!plugin_install.php!, !filter.php! und m&ouml;glicherweise !plugin_uninstall.php!.

Die folgenden Platzhalter k&ouml;nnen anstelle von hart codierten Pfaden innerhalb von OpF-Plugins verwendet werden
        >        {SYSVAR:WB_URL}   = wird durch den Inhalt der Konstanten WB_URL ersetzt
        >        {SYSVAR:WB_PATH}  = wird durch den Inhalt der Konstanten WB_PATH ersetzt
        >        {OPF:PLUGIN_URL}  = wird durch  WB_URL.'/modules/outputfilter_dashboard/plugins/{plugin_name}' ersetzt
        >        {OPF:PLUGIN_PATH} = wird durch WB_PATH.'/modules/outputfilter_dashboard/plugins/{plugin_name}' ersetzt
                        
Innerhalb der Filter funktionen funktionieren die folgenden KONSTANTEN f&uuml;r OPF Plugins 
        >        OPF_PLUGINS_PATH  
        >        OPF_PLUGINS_URL
                        Der Pfad und die Url zum Plugins-Ordner ist sehr lang und wird h&auml;ufig innerhalb von FIltern ben&ouml;tigt,
                        daher sind diese Konstanten eine bequeme Erg&auml;nzung.
                        Die URL ist 
        > OPF_PLUGINS_URL = [ WB_URL.'/modules/'.basename(dirname(__FILE__)).'/plugins/' ] 

plugin_info.php:
        ><?php
        >$plugin_directory   = 'cachecontrol';
        >$plugin_name        = 'Cache Control';
        >$plugin_version     = '1.0.0';
        >$plugin_author      = 'author...';
        >$plugin_license     = 'GNU General Public License, Version 2 or later';
        >$plugin_description = 'Filter to automatically prevent browsers from delivering outdated files (css,js) from cache';

plugin_install.php:
        Siehe <opf_register_filter()>.
        ><?php
        >if(!defined('WB_PATH')) die(header('Location: ../../index.php'));
        >
        >opf_register_filter(array(
        >        'plugin' => 'cachecontrol',
        >        'name' => 'Cache Control',
        >        'type' => OPF_TYPE_PAGE_LAST,
        >        'file' => '{OPF:PLUGIN_PATH}/filter.php',
        >        'funcname' => 'opff_cachecontrol',
        >        'desc' => array('EN' => "Description ... Take care that this filter is called last!",
        >                        'DE' => "Beschreibung ... Achten Sie darauf, da&szlig; dieser Filter als letzter aufgerufen wird!"
        >        ),
        >        'modules' => 'all',
        >        'active' => 1,
        >        'allowedit' => 0,
        >        'allowedittarget' => 1
        >));

        Standardm&auml;&szlig;ig werden neu installierte Filter ans Ende gestellt, aber Sie k&ouml;nnen die Position des Filters nachdem es registriert ist mit der Funktion <opf_move_up_before> beeinflussen.

        
filter.php:
        Diese Datei enth&auml;lt die Filter-Funktion.
        See <The Filter-Function itself>.
        ><?php
        >if(!defined('WB_PATH')) die(header('Location: ../../index.php'));
        >
        >function opff_cachecontrol(&$content, $page_id, $section_id, $module, $wb) {
        >        // function code here
        >
        >        return(TRUE);
        >}

plugin_uninstall.php:
        Diese Datei ist optional und kann auch weggelassen werden.
        ><?php
        >if(!defined('WB_PATH')) die(header('Location: ../../index.php'));
        >
        >// clean up.
        >// But do NEVER CALL opf_unregister_filter() in this file!
        >

